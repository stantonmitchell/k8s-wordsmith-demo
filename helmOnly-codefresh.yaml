version: '1.0'

stages:

  - "main_clone" # Cloned repository
  - "helm_store" # Stores the Helm chart for the primary application
  - "helm_approval" # Pauses for approval to deploy
  - "namespace_create" # Creates Namespace
  - "helm_deploy" # Deploys the primary application using Helm
steps:

  # CLONE PRIMARY REPOSITORY
  main_clone:
    type: git-clone
    title: '[CLONE] Primary repository'
    description: 'Cloning primary repository'
    repo: stantonmitchell/k8s-wordsmith-demo
    revision: ${{CF_BRANCH}}
    git: github
    fail_fast: true

  # HELM

  ## Store Helm chart
  helm_store:
    title: '[HELM | STORE] Primary Application Chart'
    description: 'Storing Helm chart for primary application'
    type: helm
    working_directory: ${{main_clone}}
    arguments:
      action: push
      chart_repo_url: 'cm://h.cfcr.io/cyber76/cfdemo'
      helm_version: 3.0.2
      chart_name: charts/k8s-wordsmith
      kube_context: GCP

  ## Deploy Approval

  helm_approval:
    type: pending-approval
    title: '[HELM | APPROVE] Primary Application Chart'
    description: Wait for approval to deploy
    timeout:
      duration: 2
      finalState: terminated
      timeUnit: minutes

  # CREATE NAMESPACE
  namespace_create:
    title: "[NAMESPACE] Create namespace: 'cfdemo-${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'"
    type: "freestyle"
    fail_fast: true
    image: "bitnami/kubectl:1.21"
    working_directory: '${{main_clone}}'
    commands:
      - "kubectl config use-context GCP"
      - "export DASH=`echo '-'`; export SETBRANCH=`echo cfdemo$DASH$CF_BRANCH$DASH$CF_SHORT_REVISION`"
      - "kubectl create ns $SETBRANCH"
      - "kubectl get ns"

  ## Deploy Application
  helm_deploy:
    type: helm
    title: '[HELM | DEPLOY] Deploy using Helm'
    description: 'Deploy our primary application with Helm'
    working_directory: ${{main_clone}}
    arguments:
      action: install
      chart_name: charts/k8s-wordsmith
      release_name: k8s-wordsmith
      helm_version: 3.0.2
      kube_context: GCP
      namespace: 'cfdemo-${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'
      custom_values:
        - 'web.tag=${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'
        - 'db.tag=${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'
        - 'words.tag=${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'